// <auto-generated />
using System.Collections.Generic;
using GalgameManager.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GalgameManager.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240226065938_Update1_OssRecord_User")]
    partial class Update1_OssRecord_User
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CategoryGalgame", b =>
                {
                    b.Property<int>("CategoriesId")
                        .HasColumnType("integer");

                    b.Property<int>("GalgamesId")
                        .HasColumnType("integer");

                    b.HasKey("CategoriesId", "GalgamesId");

                    b.HasIndex("GalgamesId");

                    b.ToTable("CategoryGalgame");
                });

            modelBuilder.Entity("GalgameManager.Server.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("GalgameManager.Server.Models.Galgame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BgmId")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("CnName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2500)
                        .HasColumnType("character varying(2500)");

                    b.Property<string>("Developer")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("ExpectedPlayTime")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("ImageLoc")
                        .HasMaxLength(220)
                        .HasColumnType("character varying(220)");

                    b.Property<long>("LastChangedTimeStamp")
                        .HasColumnType("bigint");

                    b.Property<int>("MyRate")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int>("PlayType")
                        .HasColumnType("integer");

                    b.Property<bool>("PrivateComment")
                        .HasColumnType("boolean");

                    b.Property<float>("Rating")
                        .HasColumnType("real");

                    b.Property<long>("ReleaseDateTimeStamp")
                        .HasColumnType("bigint");

                    b.Property<List<string>>("Tags")
                        .HasColumnType("text[]");

                    b.Property<int>("TotalPlayTime")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<string>("VndbId")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Galgame");
                });

            modelBuilder.Entity("GalgameManager.Server.Models.GalgameDeleted", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<long>("DeleteTimeStamp")
                        .HasColumnType("bigint");

                    b.Property<int>("GalgameId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("GalgameDeleted");
                });

            modelBuilder.Entity("GalgameManager.Server.Models.OssRecord", b =>
                {
                    b.Property<string>("Key")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<long>("Size")
                        .HasColumnType("bigint");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Key");

                    b.HasIndex("UserId");

                    b.ToTable("OssRecords");
                });

            modelBuilder.Entity("GalgameManager.Server.Models.PlayLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<long>("DateTimeStamp")
                        .HasColumnType("bigint");

                    b.Property<int>("GalgameId")
                        .HasColumnType("integer");

                    b.Property<int>("Minute")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GalgameId");

                    b.ToTable("GalPlayLog");
                });

            modelBuilder.Entity("GalgameManager.Server.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AvatarLoc")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<int>("BangumiId")
                        .HasColumnType("integer");

                    b.Property<string>("DisplayUserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<long>("LastGalChangedTimeStamp")
                        .HasColumnType("bigint");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<long>("TotalSpace")
                        .HasColumnType("bigint");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<long>("UsedSpace")
                        .HasColumnType("bigint");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("CategoryGalgame", b =>
                {
                    b.HasOne("GalgameManager.Server.Models.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GalgameManager.Server.Models.Galgame", null)
                        .WithMany()
                        .HasForeignKey("GalgamesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GalgameManager.Server.Models.Galgame", b =>
                {
                    b.HasOne("GalgameManager.Server.Models.User", "User")
                        .WithMany("Galgames")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GalgameManager.Server.Models.GalgameDeleted", b =>
                {
                    b.HasOne("GalgameManager.Server.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GalgameManager.Server.Models.OssRecord", b =>
                {
                    b.HasOne("GalgameManager.Server.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GalgameManager.Server.Models.PlayLog", b =>
                {
                    b.HasOne("GalgameManager.Server.Models.Galgame", "Galgame")
                        .WithMany("PlayTime")
                        .HasForeignKey("GalgameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Galgame");
                });

            modelBuilder.Entity("GalgameManager.Server.Models.Galgame", b =>
                {
                    b.Navigation("PlayTime");
                });

            modelBuilder.Entity("GalgameManager.Server.Models.User", b =>
                {
                    b.Navigation("Galgames");
                });
#pragma warning restore 612, 618
        }
    }
}
